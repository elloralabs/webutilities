#summary Minify included JS and CSS files to reduce the size
#sidebar TableOfContents

Minification removes unwanted characters to reduce the size. This is one of the performance improvement technique (http://developer.yahoo.com/performance/rules.html#minify). [http://developer.yahoo.com/yui/compressor/ YUICompressor] is the minification tool from Yahoo!. 

*[YUIMinFilter]* is implemented as Servlet Filter to enable on the fly minification of JS and CSS resources using [http://developer.yahoo.com/yui/compressor/ YUICompressor] internally. JS and CSS resources can be minified runtime by adding this filter. It is also advised to use ResponseCacheFilter so that result of this minification will be cached and served from cache next time for even faster loading.

<wiki:toc max_depth="2" />
=Configuration=

Declare this Filter in your *`web.xml`* ( web descriptor file)

{{{
 <filter>
 	<filter-name>yuiMinFilter</filter-name>
 	<filter-class>com.googlecode.webutilities.filters.YUIMinFilter</filter-class>
 	<!-- All the init params are optional and are equivalent to YUICompressor command line options --> 
 	<init-param> 
 		<param-name>lineBreak</param-name>
		<param-value>8000</param-value>
 	</init-param>
 </filter>
}}}
 
Map this filter on your JS and CSS resources

{{{
 <filter-mapping>
   <filter-name>yuiMinFilter</filter-name>
   <url-pattern>*.js</url-pattern>
   <url-pattern>*.json</url-pattern>
   <url-pattern>*.css</url-pattern>
 </filter-mapping>
}}}

= Usage =
Once it is configured on js, css extensions, it served those resources minified on the fly when requested. There is no anything else needed. If you have also configured merge servlet then those multiple merged JS or CSS will also be minified on the fly using this.

=Customization=

All the init parameters are optional and are as explained below.

  * *lineBreak* - equivalent to YUICompressor --line-break. Insert a line break after the specified column number
  * *noMunge* - equivalent to YUICompressor --nomunge. Minify only, do not obfuscate. Default false.
  * *preserveSemi* - equivalent to YUICompressor --preserve-semi. Preserve all semicolons. Default false. 
  * *disableOptimizations* - equivalent to YUICompressor --disable-optimizations. Disable all micro optimizations. Default false. 
  * *charset* - equivalent to YUICompressor --charset. Charset to be used. Default UTF-8.

Besides above parameters, each filter has following common parameters to better customize and configure it.

  * *ignoreURLPattern* - to ignore the URLs matching this regex. e.g. `.*\.(jpg|png|gif)`.
  * *acceptURLPattern* - to process the URLs matching this regex (ignore precedes). e.g. `.*\.(css|js|html)`.
  * *ignoreMIMEPattern* - to ignore if the response mime matches this regex. e.g. `images/.*|video/.*`.
  * *acceptMIMEPattern* - to process if the response mime matches this regex (ignore precedes). e.g. `text/css|text/html`.
  * *ignoreUAPattern* - to ignore if request user agent name matches this regex. e.g. `MSIE|KHTML`.
  * *acceptUAPattern* - to process if request user agent name matches this regex (ignore precedes). e.g. `WebKit|Opera`.

== About these patterns ==

 * If ignore pattern is not specified, it is treated as nothing to ignore.
 * If accept pattern is not specified, it is treated as everything to accept.
 * If resource matches both ignore and accept, ignore will take precedence.
 * If resource matches ignore pattern but not accept pattern, obviously it will not be processed by the filter. 
 * If resource doesn't match ignore pattern but match accept pattern, then it will be processed by the filter.
 * If resource doesn't match ignore as well as accept pattern, it will not be processed.
