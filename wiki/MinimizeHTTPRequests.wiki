#summary Minimize HTTP Requests by merging multiple resources in one request
#sidebar TableOfContents

Server calls are costly. Each new HTTP request has overhead of DNS lookup, request initialization, making actual request to get the data. For better performance it is [http://developer.yahoo.com/performance/rules.html#num_http advised to make Fewer HTTP requests]. We can reduce HTTP requests if we combine required multiple static resources together and get them in one request. This servlet can also be used to [AddExpiresHeader Adds appropriate Expires/Cache-Control headers] for images, JS or CSS files.  

Using *`JSCSSMergeServlet`* multiple JS or CSS files can be served together in one HTTP call at runtime. There is no need to merge them manually or save in a single file. You just need to request them using single URL and put multiple resources separated by comma as shown below. 

<wiki:toc max_depth="2" />
=Configuration=

Declare this servlet in your *`web.xml`* ( web descriptor file)

{{{
 <servlet>
 	<servlet-name>JSCSSMergeServlet</servlet-name>
 	<servlet-class>com.googlecode.webutilities.servlets.JSCSSMergeServlet</servlet-class>
 	<!-- This init param is optional and default value is minutes for 7 days in future. --> 
 	<init-param>
		<param-name>expiresMinutes</param-name>
		<param-value>14400</param-value> <!-- 10 days -->
 	</init-param>
	<!-- This init param is also optional and default value is 'public'.-->
        <init-param>
		<param-name>cacheControl</param-name>
		<param-value>public</param-value> 
 	</init-param>
 </servlet>
}}}
 
Map this servlet to serve your JS and CSS resources. 
{{{
 <servlet-mapping>
   <servlet-name>JSCSSMergeServlet</servlet-name>
   <url-pattern>*.js</url-pattern>
   <url-pattern>*.json</url-pattern>
   <url-pattern>*.css</url-pattern>
 </servlet-mapping>
}}}
 
=Usage=

In your web pages (HTML or JSP files) combine your multiple JS or CSS in one request as shown below.

To serve multiple JS files (from same or different folder on server) through one HTTP request. Only last resource should end with appropriate extension.  
{{{
 <!-- To Serve following four JS files in one request

  1. /appContext/js/libs/prototype.js
  2. /appContext/js/controls/controls.js 
  3. /appContext/js/controls/dragdrop.js 
  4. /appContext/js/utils/util.js    -->

 <script language="JavaScript" src="/appContext/js/libs/prototype,../controls/controls,dragdrop,../utils/util.js"></script>

}}}
 
To serve multiple CSS files through one HTTP request

{{{
  <!-- To Serve following 3 CSS files in one request

  1. /appContext/css/common.css
  2. /appContext/css/aqua/calendar.css
  3. /appContext/css/aqua/skin.css   -->

 <link rel="StyleSheet" href="/appContext/css/common,/css/aqua/calendar,skin.css"/>
}}}
 
Also if you wanted to serve them minified all together then you can also add *YUIMinFilter*. It is also advised that you configure *ResponseCacheFilter* so that the result of this merging will be cached to speed up further requests by avoiding reading, merging them again next time. 

=Customization =

Both init parameters of this Servlet are optional.

  * *expiresMinutes* - Set expired header. Relative number of minutes (added to current time). Default 10080. 
  * *cacheControl* - set Cache-Control header. Default value "public".

Both these parameters are used to enable client side caching. For more details please look at [AddExpiresHeader Adding Expires/Cache-Control header] section.