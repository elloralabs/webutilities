#summary In memory caching static resources responses at server side
#sidebar TableOfContents

We can cache the resources at client side using Cache-Control and Expires header using JSCSSMergeServelet. However sometimes if client cache is disabled by user, the resources get read from disk again and then served. Disk operations are costly. In our case when we can chain the performance filters like merging (JSCSSMergeServlet) , minifying (YUIMinFilter) and then compressing (CompressorFilter). New request for the same resources will have to go through each filter though we had already performed those optimization few minutes/seconds ago. In such cases having caching mechanism at server side improves significant performance.

*ResponseCacheFilter* is meant to serve that purpose. It caches the previously merged, minified and gziped response and serves from the cache next time. If any of resource in the request have been modified on the disk since last caching time, it also smartly reloads the cache with fresh contents and returns updated contents. 

== Configure ==
== Use ==
== Customize ==