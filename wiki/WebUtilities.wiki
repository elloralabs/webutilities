#summary a library of Java classes implemented as J2EE web components to speed up the front-end on the fly.
#sidebar TableOfContents
<wiki:toc max_depth="2" />
== Introduction ==
Client side performance is important for better user experience. Optimizing and efficiently serving the static resources (JS, HTML, CSS, Images etc.) significantly increases client side performance. This Java Library (WebUtilities) provides web components to help you speed up Front-End of your J2EE application.

It is said that 80% of the end-user response time is spent on the front-end. To make the front-end efficient and friendly to the browser, [http://developer.yahoo.com/performance/rules.html various performance practices] have been suggested. We can measure page performance using tools such as [http://developer.yahoo.com/yslow/ YSlow] or [http://code.google.com/speed/page-speed/ Page Speed]. These tools validate page against the best practices and give the performance ratings/grade. WebUtilities provides inbuilt components to apply some of those best practices in your web application with minimal change to speed it up and get higher performance score. Below screenshots shows the difference it makes.

<table border="0" width="100%"  align="center">
  <tr><th>Before - Without WebUtilities</th><th>After - Using WebUtilities</th></tr>
  <tr>
    <th>
http://webutilities.googlecode.com/svn/trunk/test/resources/img/BEFORE.png
    </th>
    <th>
http://webutilities.googlecode.com/svn/trunk/test/resources/img/AFTER.png
    </th>
  </tr> 
</table>

== Features ==

 * Serve multiple JS or CSS files in one request
 * Add Expires header for JS, CSS and Image files to be cached by browser
 * Minify JS, CSS files on the fly
 * Minify Inline CSS and JS code blocks
 * Add Character Encoding to your response
 * Server compressed contents (gzip/compress/deflate)
 * Cache responses to speed loading by avoiding reprocessing

Let's see how to apply those best practices in your application and speed it up :)

==Get started==
 
 * Download Latest *[http://code.google.com/p/webutilities/downloads/list webutilities-x.y.z.jar]*
 * Get latest *[http://yuilibrary.com/downloads/#yuicompressor yuicompressor-x.y.z.jar]* 
 * Add these Jar files to your project class path (copy them to WEB-INF/lib)
 * Configure your `web.xml` accordingly.

For Example and step by step Guide, Visit [WebUtilities Wiki Pages].

== Third Party Dependency ==

 * *[http://yuilibrary.com/downloads/#yuicompressor yuicompressor-x.y.z.jar YUICompressor JAR]* 
WebUtilities uses YUI Compressor internally to minify CSS and JS files.
 
*Use left navigation to get the configuration, usage and customization of each component in details.*