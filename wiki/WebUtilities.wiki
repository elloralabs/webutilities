#summary a library of Java classes implemented as J2EE web components to speed up the front-end on the fly.
#sidebar TableOfContents

Once the server response comes back to the browser, browser has to parse, download included resources and then display them to the user. It is said that 80% of the end-user response time is spent on the front-end. If front-end is not coded efficiently or browser friendly, it takes more time for browser to finally load and display the page to the end user. This makes application looks slow and sluggish to the user. 

To make the front-end efficient and friendly to the browser, various performance practices have been suggested. We can measure the front-end performance using tools such as [http://developer.yahoo.com/yslow/ YSlow] or [http://code.google.com/speed/page-speed/ Page Speed]. These tools also suggest [http://developer.yahoo.com/performance/rules.html  the best practices]. *WebUtilities* provides inbuilt components to apply some of those best practices in your web application with minimal change.  

== Features ==

 * Serve multiple JS or CSS files in one request
 * Add Expires header for JS, CSS and Image files to be cached by browser
 * Minify JS, CSS files on the fly
 * Minify Inline CSS and JS code blocks
 * Add Character Encoding to your response
 * Server compressed contents (gzip/compress/deflate)

Let's see how to apply those best practices in your application and speed it up :)

==Get started==

To get started you will need to add latest *[http://code.google.com/p/webutilities/downloads/list webutilities-x.y.z.jar]* and *[http://yuilibrary.com/downloads/#yuicompressor yuicompressor-x.y.z.jar]* to your J2EE web project (by putting in WEB-INF/lib folder of your webapp). *WebUtilities* uses [http://developer.yahoo.com/yui/compressor/ YUICompressor] to minify JavaScript and CSS files on the fly.

Use left navigation to get the configuration, usage and customization of each component in details.