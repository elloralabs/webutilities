
#Single CSS fetch test

1.test.name=Test fetch single a.css
1.test.resources=resources/css/a.css
1.test.expected=resources/css/a.css
1.test.request.uri=/resources/css/a.css
1.test.init.params=useCache:false,expiresMinutes:2

2.test.name=Test fetch single b.css
2.test.resources=resources/css/b.css
2.test.expected=resources/css/b.css
2.test.request.uri=/resources/css/b.css
2.test.init.params=useCache:false,expiresMinutes:2

3.test.name=Test fetch single c.css
3.test.resources=resources/css/c.css
3.test.expected=resources/css/c.css
3.test.request.uri=/resources/css/c.css
3.test.init.params=useCache:false,expiresMinutes:2

#Merged CSS test case

4.test.name=Test fetch merged a.css and b.css
4.test.resources=resources/css/a.css,resources/css/b.css
4.test.expected=resources/css/expected-a-b.css
4.test.request.uri=/resources/css/a,b.css
4.test.init.params=useCache:false,expiresMinutes:2

5.test.name=Test fetch merged a.css, b.css and c.css
5.test.resources=resources/css/a.css,resources/css/b.css,resources/css/c.css
5.test.expected=resources/css/expected-a-b-c.css
5.test.request.uri=/resources/css/a,b,c.css
5.test.init.params=useCache:false,expiresMinutes:2

6.test.name=Test fetch merged a.css, c.css and b.css (test ordered merge)
6.test.resources=resources/css/a.css,resources/css/b.css,resources/css/c.css
6.test.expected=/resources/css/expected-a-c-b.css
6.test.request.uri=/resources/css/a,c,b.css
6.test.init.params=useCache:false,expiresMinutes:2

7.test.name=Test fetch merged a.css, c.css and b.css and again a.css (test duplicate resource)
7.test.resources=resources/css/a.css,resources/css/b.css,resources/css/c.css
7.test.expected=resources/css/expected-a-b-c.css
7.test.request.uri=/resources/css/a,b,c,a.css
7.test.init.params=useCache:false,expiresMinutes:2